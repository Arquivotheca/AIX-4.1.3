*/* @(#)33	1.1  src/bos/usr/ccs/bin/as/POWER/instrs.ops.603, cmdas, bos411, 9428A410j 3/10/94 10:44:25*/
*/*
* * COMPONENT_NAME: (CMDAS) Assembler and Macroprocessor 
* *
* * FUNCTIONS:  instrs.ops.603
*
* *       V4.1 603 processor unique instructions that are not 
* *       defined in the PowerPC architecture and are only implemented
* *       in 603 processor.
* *                                                                   
* *       Refer to "instrs.ops.forms" for the summary of all the
* *       form definitions and the input and output format descriptions.
*
* * ORIGINS:  27
* *
* * This module contains IBM CONFIDENTIAL code. -- (IBM
* * Confidential Restricted when combined with the aggregated
* * modules for this product)
* *                  SOURCE MATERIALS
* * (C) COPYRIGHT International Business Machines Corp. 1994
* * All Rights Reserved
* *
* * US Government Users Restricted Rights - Use, duplication or
* * disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
* */
***********************************************************************
*    Instruction Definition format:
*
*    mn_PPC  if  of  opc-exopc-rc/lk-ov-frt-fra-ab-frb  mn_PW
*
*   where
*      mn_PPC = op code mnenmonic for PowerPC architecture.
*      if = input-format descriptor for each operand of instruction
*      of = output-format descriptor for placing operands into the
*           generated instruction
*      op  = opcode in decimal (0-63) bits 0-5 of instruction
*      ext = extended op code in decimal - bits 22-30 of inst
*      rc/lk = Rc or LK bit (0/1) - bit 31 of instruction
*              (Rc=record bit, LK=link bit)
*      ov  = OV bit (0/1) - bit 21 of instruction
*              (enable overflow)
*      frt = fixed operand 1 field in decimal (0-31) - bits 6-10
*      fra = fixed operand 2 field in decimal (0-31) - bits 11-15
*      ab  = AA bit (0/1) - bit 30 of instruction ... overlays
*              exopc field (ab=Absolute/relative)
*      frb = fixed operand 3 field in decimal (0-31) - bits 16-20
*      mn_PW  = POWER mnemonics that shares the same opcode with
*                PowerPC.
* ---------------------------------------------------------------------
*| op  | frt | fra | frb |ov|            ext                    |rc/lk |
* ---------------------------------------------------------------------
* 0     6     11    16    21 22                            | ab | 31
*                                                           ----
*                                                           30
*
************************************************************************
*** - *** Type indicator:  Bit map for 603 unique instructions is
*                           0x8020
% 32800
************************************************************************
*       X-Form instructions
***********************************************************************
*
*       Instruction Format: XB-format
*
*       ---------------------------------------------------
*      |OPCODE| / / / | / / /|  RB   |       EO       |Rc |
*       ---------------------------------------------------
*       0    5 6    10 11   15 16   20 21            30 31
*
*   Asm Formats:
*
*       mnemonic  RB               ----- RC=0
*       mnemonic. RB               ----- RC=1
*
***********************************************************************
***********************************
**** /*** storage Control  ***/ ****
***********************************
*Opcde 1F
*       mnem  |input     |out |op code value
*3d2    tlbld  rb             Load Data TLB Entry
        tlbld  r         x1   31-978
*3f2    tlbli  rb             Load Instruction TLB Entry
        tlbli  r         x1   31-1010
***********************************************************************
